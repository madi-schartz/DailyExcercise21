[
  {
    "objectID": "DailyExcercise21.html",
    "href": "DailyExcercise21.html",
    "title": "Daily Excercise 21",
    "section": "",
    "text": "Download streamflow data from USGS\n\n# load in necessary packages\nlibrary(dataRetrieval)\n\nWarning: package 'dataRetrieval' was built under R version 4.4.3\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.7     ✔ recipes      1.1.1\n✔ dials        1.3.0     ✔ rsample      1.2.1\n✔ dplyr        1.1.4     ✔ tibble       3.2.1\n✔ ggplot2      3.5.1     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ parsnip      1.2.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.2     ✔ yardstick    1.3.2\n\n\nWarning: package 'recipes' was built under R version 4.4.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(dplyr)\nlibrary(tidyverse)\n\nWarning: package 'lubridate' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ lubridate 1.9.4     ✔ stringr   1.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tsibble)\n\nWarning: package 'tsibble' was built under R version 4.4.3\n\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\n# Example: Cache la Poudre River at Mouth (USGS site 06752260)\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",    # Download data from USGS for site 06752260\n                          parameterCd = \"00060\",      # Parameter code 00060 = discharge in cfs)\n                          startDate = \"2013-01-01\",   # Set the start date\n                          endDate = \"2023-12-31\") |&gt;  # Set the end date\n  renameNWISColumns() |&gt;                              # Rename columns to standard names (e.g., \"Flow\", \"Date\")\n  mutate(Date = yearmonth(Date)) |&gt;                   # Convert daily Date values into a year-month format (e.g., \"2023 Jan\")\n  group_by(Date) |&gt;                                   # Group the data by the new monthly Date\n  summarise(Flow = mean(Flow))                       # Calculate the average daily flow for each month\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\n\n\n\n1. Convert to tsibble\n\n# Convert to tsibble (monthly data, with Date as index)\npoudre_ts &lt;- poudre_flow |&gt; \n  as_tsibble(index = Date)\n\n\n\n2. Plotting the time series\n\nlibrary(ggplot2)\nlibrary(plotly)\n\nWarning: package 'plotly' was built under R version 4.4.3\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Basic ggplot of flow over time\np &lt;- ggplot(poudre_ts, aes(x = Date, y = Flow)) +\n  geom_line(color = \"navyblue\") +\n  labs(title = \"Monthly Average Flow of Cache la Poudre River\",\n       y = \"Flow (cfs)\", x = \"Date\") +\n  theme_minimal()\n\n# Animate with plotly\nggplotly(p)\n\n\n\n\n\n\n\n3. Subseries\n\nlibrary(feasts)\n\nWarning: package 'feasts' was built under R version 4.4.3\n\n\nLoading required package: fabletools\n\n\nWarning: package 'fabletools' was built under R version 4.4.3\n\n\n\nAttaching package: 'fabletools'\n\n\nThe following object is masked from 'package:yardstick':\n\n    accuracy\n\n\nThe following object is masked from 'package:parsnip':\n\n    null_model\n\n\nThe following objects are masked from 'package:infer':\n\n    generate, hypothesize\n\n# use gg_subseries to visualize the data\nsubseries_plot &lt;- poudre_ts %&gt;%\n  gg_subseries(Flow) +\n  labs(title = \"Monthly Subseries of Poudre River Flow\") +\n  theme_minimal()\n\nprint(subseries_plot)\n\n\n\n\n\n\n\n\n\n\n4. Decompose\n\nlibrary(fabletools)\n\n# STL decomposition with a seasonal window (say 13 months for annual seasonality)\ndecomp &lt;- poudre_ts |&gt; \n  model(STL(Flow ~ season(window = \"periodic\"))) |&gt; \n  components()\n\n# Plot the components\nautoplot(decomp)"
  }
]